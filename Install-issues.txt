## ISSUE:
	/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-recursive
	Making all in src
	Making all in libisInside
	if /bin/sh ../../libtool --mode=compile g++ -DHAVE_CONFIG_H -I. -I. -I../..     -g -O2 -MT libisInside.lo -MD -MP -MF ".deps/libisInside.Tpo" -c -o libisInside.lo libisInside.cpp; \
		then mv -f ".deps/libisInside.Tpo" ".deps/libisInside.Plo"; else rm -f ".deps/libisInside.Tpo"; exit 1; fi
	mkdir .libs
	 g++ -DHAVE_CONFIG_H -I. -I. -I../.. -g -O2 -MT libisInside.lo -MD -MP -MF .deps/libisInside.Tpo -c libisInside.cpp  -fno-common -DPIC -o .libs/libisInside.o
	In file included from libisInside.cpp:1:
	./isInside.h:113:24: error: extra qualification on member 'normal_vector_tryout'
	  void signed_surface::normal_vector_tryout(long faceID, int majorPoint, double *v1, double *v2, double *v1xv2_n...
	       ~~~~~~~~~~~~~~~~^
	libisInside.cpp:67:17: warning: format specifies type 'int *' but the argument has type 'long *' [-Wformat]
	  fscanf(f,"%i",&np);
	            ~~  ^~~
	            %li
	1 warning and 1 error generated.
	make[3]: *** [libisInside.lo] Error 1
	make[2]: *** [all-recursive] Error 1
	make[1]: *** [all-recursive] Error 1
	make: *** [all] Error 2


## Sol:
	Make the following change in isInside.h
	//void signed_surface::normal_vector_tryout(long faceID, int majorPoint, double *v1, double *v2, double *v1xv2_norm, double v1xv2[3], double ve1[3], double ve2[3]);
  	void normal_vector_tryout(long faceID, int majorPoint, double *v1, double *v2, double *v1xv2_norm, double v1xv2[3], double ve1[3], double ve2[3]);

  	Make the following change in libisInside
	// fscanf(f,"%i",&np);
  	fscanf(f,"%ld",&np);

## ISSUE:
	/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-recursive
	Making all in src
	Making all in libisInside
	if /bin/sh ../../libtool --mode=compile g++ -DHAVE_CONFIG_H -I. -I. -I../..     -g -O2 -MT libisInside.lo -MD -MP -MF ".deps/libisInside.Tpo" -c -o libisInside.lo libisInside.cpp; \
		then mv -f ".deps/libisInside.Tpo" ".deps/libisInside.Plo"; else rm -f ".deps/libisInside.Tpo"; exit 1; fi
	 g++ -DHAVE_CONFIG_H -I. -I. -I../.. -g -O2 -MT libisInside.lo -MD -MP -MF .deps/libisInside.Tpo -c libisInside.cpp  -fno-common -DPIC -o .libs/libisInside.o
	 g++ -DHAVE_CONFIG_H -I. -I. -I../.. -g -O2 -MT libisInside.lo -MD -MP -MF .deps/libisInside.Tpo -c libisInside.cpp -o libisInside.o >/dev/null 2>&1
	/bin/sh ../../libtool --mode=link g++  -g -O2   -o libisInside.la -rpath /Users/shibabrat/lib -release 2.1.0 libisInside.lo libisInside_3d.lo version.lo  
	rm -fr  .libs/libisInside-2.1.0.dylib .libs/libisInside.a .libs/libisInside.dylib .libs/libisInside.la .libs/libisInside.lai
	g++ -r -Wl,-bind_at_load -keep_private_externs -nostdlib -o .libs/libisInside-2.1.0.dylib-master.o  .libs/libisInside.o .libs/libisInside_3d.o .libs/version.o
	g++ -dynamiclib -flat_namespace -undefined suppress -o .libs/libisInside-2.1.0.dylib .libs/libisInside-2.1.0.dylib-master.o   -install_name  /Users/shibabrat/lib/libisInside-2.1.0.dylib 
	(cd .libs && rm -f libisInside.dylib && ln -s libisInside-2.1.0.dylib libisInside.dylib)
	ar cru .libs/libisInside.a  libisInside.o libisInside_3d.o version.o
	ranlib .libs/libisInside.a
	creating libisInside.la
	(cd .libs && rm -f libisInside.la && ln -s ../libisInside.la libisInside.la)
	if g++ -DHAVE_CONFIG_H -I. -I. -I.. -I../src/libisInside/    -g -O2 -MT test1.o -MD -MP -MF ".deps/test1.Tpo" -c -o test1.o test1.cpp; \
		then mv -f ".deps/test1.Tpo" ".deps/test1.Po"; else rm -f ".deps/test1.Tpo"; exit 1; fi
	test1.cpp:19:5: error: second parameter of 'main' (argument array) must be of type 'char **'
	int main(int narg, char *arg) {
	    ^
	1 error generated.
	make[3]: *** [test1.o] Error 1
	make[2]: *** [all-recursive] Error 1
	make[1]: *** [all-recursive] Error 1
	make: *** [all] Error 2

## Sol:
	Make the following changes to the test1.cpp, test2.cpp, test3.cpp, and test4.cpp
	Change the main function's second argument to char **arg
